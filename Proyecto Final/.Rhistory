M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
#CARGUE DE LAS BASES DE DATOS
inglesa_1 = read_excel("Inglesa.xlsx", sheet = "18-19")
inglesa_2 = read_excel("Inglesa.xlsx", sheet = "19-20")
inglesa_3 = read_excel("Inglesa.xlsx", sheet = "20-21")
#CREAR TABLA DE LAS VARIABLES
variables <- read_excel("Variables.xlsx")
variables
# REESTRUCTURACIÓN Y UNIÓN DE LAS BASES DE DATOS
inglesa_aux = rbind(inglesa_2, inglesa_3)
inglesa_final = full_join(inglesa_aux, inglesa_1)
View(inglesa_final)
View(inglesa_final)
View(inglesa_2)
View(inglesa_1)
View(inglesa_2)
View(inglesa_final)
View(inglesa_final)
# FILTRACIÓN POR COLUMNAS DE INTERÉS
inglesa_final = inglesa_final[ , -c(2, 4:11, 15:24)]
inglesa_final = full_join(inglesa_aux, inglesa_1)
# FILTRACIÓN POR COLUMNAS DE INTERÉS
inglesa_final = inglesa_final[ , c(2, 4:11, 15:24)]
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
library(reshape2)
library(dplyr)
library(e1071)
library(Hmisc)
library(inspectdf)
library(funModeling)
library(VIM)
library(stringr)
library(xtable)
library(ggplot2)
library(directlabels)
library(scales)
library(ggthemes)
library(mice)
library(BBmisc)
descriptivas<- function(x){data.frame("MEDIDA"=c("Observaciones", "Mínimo", "1er Q", "Media", "Mediana", "Desv Est", "3er Q", "Máximo", "Asimetría", "Curtosis", "atípico leve<", "atípico leve>","atípico extremo<","atípico extremo>", "Err Est Media", "IC(95%) Media Up", "IC(95%) Media Down"),"VALOR"=format(c(length(na.omit(x)), min(na.omit(x)), quantile(na.omit(x), prob=0.25), mean(na.omit(x)), median(na.omit(x)), sd(na.omit(x)), quantile(na.omit(x), prob=0.75), max(na.omit(x)), skewness(na.omit(x)), kurtosis(na.omit(x)), (2.5*quantile(na.omit(x),prob=0.25)-1.5*quantile(na.omit(x), prob=0.75)),(2.5*quantile(na.omit(x),prob=0.75)-1.5*quantile(na.omit(x), prob=0.25)),(4*quantile(na.omit(x),prob=0.25)-3*quantile(na.omit(x), prob=0.75)),(4*quantile(na.omit(x),prob=0.75)-3*quantile(na.omit(x), prob=0.25)), ((sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))+1.96*(sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))-1.96*((sd(na.omit(x))/sqrt(length(na.omit(x))))))), scientific = F))}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS
descriptivas2<-function(Continua,Categorías){
x1=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){length(na.omit(x))})
names(x1)=c("Categoría","Obs")
x2=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){min(na.omit(x))})
names(x2)=c("Categoría","Mínimo")
x3=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.25)})
names(x3)=c("Categoría","1er Q")
x4=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){median(na.omit(x))})
names(x4)=c("Categoría","Mediana")
x5=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){mean(na.omit(x))})
names(x5)=c("Categoría","Media")
x6=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.75)})
names(x6)=c("Categoría","3er Q")
x7=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){max(na.omit(x))})
names(x7)=c("Categoría","Máximo")
x8=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){sd(na.omit(x))})
names(x8)=c("Categoría","Desv Est")
x9=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){skewness(na.omit(x))})
names(x9)=c("Categoría","Asimetría")
x10=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){kurtosis(na.omit(x))})
names(x10)=c("Categoría","Curtosis")
cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)[,-seq(3,19,2)]
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS EN SUBMUESTRAS
tabla_freq<- function(x,total=1,na="ifany"){
if (total==1) {
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",sum(M$`Freq. Abs.`),sum(M$`Freq. Rel.`))
M$`Freq. Rel.`=as.numeric(M$`Freq. Rel.`)
M$`Freq. Abs.`=as.numeric(M$`Freq. Abs.`)
M
} else{
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M
}
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VAR DISCRETAS
tabla_freq2<-function(x,y,na="ifany",prop=0, suma=c("filas","col")){
if (prop==0) {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
M
} else if (prop==1 & suma=="filas") {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 2:ncol(M)) {
M[,i]=M[,i]/M[,ncol(M)]
}
M
} else {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
inglesa_aux = inglesa_final[ , c(1:2, 4, 6:7, 9:10, 11, 13, 15, 17)]
View(inglesa_aux)
View(inglesa_aux)
# FILTRACIÓN POR COLUMNAS DE INTERÉS
inglesa_final = inglesa_final[ , c(2, 4:11, 15:24)]
inglesa_aux = inglesa_final[ , c(1:2, 4, 6:7, 9:10, 12, 14, 16, 18)]
View(variables)
View(variables)
View(inglesa_aux)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
library(reshape2)
install.packages("reshape2")
install.packages("dplyr")
install.packages("e1071")
install.packages("Hmisc")
install.packages("inspectdf")
install.packages("funModeling")
install.packages("VIM")
install.packages("stringr")
install.packages("xtable")
install.packages("ggplot2")
install.packages("directlabels")
install.packages("scales")
install.packages("ggthemes")
install.packages("mice")
install.packages("BBmisc")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
library(reshape2)
library(dplyr)
library(e1071)
library(Hmisc)
library(inspectdf)
library(funModeling)
library(VIM)
library(stringr)
library(xtable)
library(ggplot2)
library(directlabels)
library(scales)
library(ggthemes)
library(mice)
library(BBmisc)
descriptivas<- function(x){data.frame("MEDIDA"=c("Observaciones", "Mínimo", "1er Q", "Media", "Mediana", "Desv Est", "3er Q", "Máximo", "Asimetría", "Curtosis", "atípico leve<", "atípico leve>","atípico extremo<","atípico extremo>", "Err Est Media", "IC(95%) Media Up", "IC(95%) Media Down"),"VALOR"=format(c(length(na.omit(x)), min(na.omit(x)), quantile(na.omit(x), prob=0.25), mean(na.omit(x)), median(na.omit(x)), sd(na.omit(x)), quantile(na.omit(x), prob=0.75), max(na.omit(x)), skewness(na.omit(x)), kurtosis(na.omit(x)), (2.5*quantile(na.omit(x),prob=0.25)-1.5*quantile(na.omit(x), prob=0.75)),(2.5*quantile(na.omit(x),prob=0.75)-1.5*quantile(na.omit(x), prob=0.25)),(4*quantile(na.omit(x),prob=0.25)-3*quantile(na.omit(x), prob=0.75)),(4*quantile(na.omit(x),prob=0.75)-3*quantile(na.omit(x), prob=0.25)), ((sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))+1.96*(sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))-1.96*((sd(na.omit(x))/sqrt(length(na.omit(x))))))), scientific = F))}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS
descriptivas2<-function(Continua,Categorías){
x1=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){length(na.omit(x))})
names(x1)=c("Categoría","Obs")
x2=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){min(na.omit(x))})
names(x2)=c("Categoría","Mínimo")
x3=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.25)})
names(x3)=c("Categoría","1er Q")
x4=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){median(na.omit(x))})
names(x4)=c("Categoría","Mediana")
x5=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){mean(na.omit(x))})
names(x5)=c("Categoría","Media")
x6=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.75)})
names(x6)=c("Categoría","3er Q")
x7=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){max(na.omit(x))})
names(x7)=c("Categoría","Máximo")
x8=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){sd(na.omit(x))})
names(x8)=c("Categoría","Desv Est")
x9=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){skewness(na.omit(x))})
names(x9)=c("Categoría","Asimetría")
x10=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){kurtosis(na.omit(x))})
names(x10)=c("Categoría","Curtosis")
cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)[,-seq(3,19,2)]
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS EN SUBMUESTRAS
tabla_freq<- function(x,total=1,na="ifany"){
if (total==1) {
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",sum(M$`Freq. Abs.`),sum(M$`Freq. Rel.`))
M$`Freq. Rel.`=as.numeric(M$`Freq. Rel.`)
M$`Freq. Abs.`=as.numeric(M$`Freq. Abs.`)
M
} else{
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M
}
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VAR DISCRETAS
tabla_freq2<-function(x,y,na="ifany",prop=0, suma=c("filas","col")){
if (prop==0) {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
M
} else if (prop==1 & suma=="filas") {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 2:ncol(M)) {
M[,i]=M[,i]/M[,ncol(M)]
}
M
} else {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
#CARGUE DE LAS BASES DE DATOS
inglesa_1 = read_excel("Inglesa.xlsx", sheet = "18-19")
inglesa_2 = read_excel("Inglesa.xlsx", sheet = "19-20")
inglesa_3 = read_excel("Inglesa.xlsx", sheet = "20-21")
#CREAR TABLA DE LAS VARIABLES
variables <- read_excel("Variables.xlsx")
variables
# REESTRUCTURACIÓN Y UNIÓN DE LAS BASES DE DATOS
inglesa_aux = rbind(inglesa_2, inglesa_3)
inglesa_final = full_join(inglesa_aux, inglesa_1)
# FILTRACIÓN POR COLUMNAS DE INTERÉS
inglesa_final = inglesa_final[ , c(2, 4:11, 15:24)]
# REORDENAMIENTO DE LA BASE DE DATOS - 1RA VERSIÓN
# ELIMINAMOS EL EQUIPO CONTRINCANTE Y TODO LO QUE TENGA QUE VER CON ÉL
inglesa_aux = inglesa_final[ , c(1:2, 4, 6:7, 9:10, 12, 14, 16, 18)]
View(inglesa_final)
View(inglesa_final)
View(inglesa_aux)
View(inglesa_aux)
View(inglesa_aux)
View(inglesa_aux)
View(inglesa_final)
View(inglesa_final)
str(inglesa_aux)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
library(reshape2)
library(dplyr)
library(e1071)
library(Hmisc)
library(inspectdf)
library(funModeling)
library(VIM)
library(stringr)
library(xtable)
library(ggplot2)
library(directlabels)
library(scales)
library(ggthemes)
library(mice)
library(BBmisc)
descriptivas<- function(x){data.frame("MEDIDA"=c("Observaciones", "Mínimo", "1er Q", "Media", "Mediana", "Desv Est", "3er Q", "Máximo", "Asimetría", "Curtosis", "atípico leve<", "atípico leve>","atípico extremo<","atípico extremo>", "Err Est Media", "IC(95%) Media Up", "IC(95%) Media Down"),"VALOR"=format(c(length(na.omit(x)), min(na.omit(x)), quantile(na.omit(x), prob=0.25), mean(na.omit(x)), median(na.omit(x)), sd(na.omit(x)), quantile(na.omit(x), prob=0.75), max(na.omit(x)), skewness(na.omit(x)), kurtosis(na.omit(x)), (2.5*quantile(na.omit(x),prob=0.25)-1.5*quantile(na.omit(x), prob=0.75)),(2.5*quantile(na.omit(x),prob=0.75)-1.5*quantile(na.omit(x), prob=0.25)),(4*quantile(na.omit(x),prob=0.25)-3*quantile(na.omit(x), prob=0.75)),(4*quantile(na.omit(x),prob=0.75)-3*quantile(na.omit(x), prob=0.25)), ((sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))+1.96*(sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))-1.96*((sd(na.omit(x))/sqrt(length(na.omit(x))))))), scientific = F))}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS
descriptivas2<-function(Continua,Categorías){
x1=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){length(na.omit(x))})
names(x1)=c("Categoría","Obs")
x2=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){min(na.omit(x))})
names(x2)=c("Categoría","Mínimo")
x3=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.25)})
names(x3)=c("Categoría","1er Q")
x4=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){median(na.omit(x))})
names(x4)=c("Categoría","Mediana")
x5=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){mean(na.omit(x))})
names(x5)=c("Categoría","Media")
x6=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.75)})
names(x6)=c("Categoría","3er Q")
x7=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){max(na.omit(x))})
names(x7)=c("Categoría","Máximo")
x8=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){sd(na.omit(x))})
names(x8)=c("Categoría","Desv Est")
x9=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){skewness(na.omit(x))})
names(x9)=c("Categoría","Asimetría")
x10=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){kurtosis(na.omit(x))})
names(x10)=c("Categoría","Curtosis")
cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)[,-seq(3,19,2)]
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS EN SUBMUESTRAS
tabla_freq<- function(x,total=1,na="ifany"){
if (total==1) {
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",sum(M$`Freq. Abs.`),sum(M$`Freq. Rel.`))
M$`Freq. Rel.`=as.numeric(M$`Freq. Rel.`)
M$`Freq. Abs.`=as.numeric(M$`Freq. Abs.`)
M
} else{
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M
}
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VAR DISCRETAS
tabla_freq2<-function(x,y,na="ifany",prop=0, suma=c("filas","col")){
if (prop==0) {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
M
} else if (prop==1 & suma=="filas") {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 2:ncol(M)) {
M[,i]=M[,i]/M[,ncol(M)]
}
M
} else {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
str(inglesa_aux)
class(inglesa_aux$Date)
str(inglesa_aux)
class(str(inglesa_aux))
tabla_freq(inglesa_aux$Date)
tabla_freq(inglesa_aux$Date)
tabla_freq(inglesa_aux$Date)
tabla_freq(inglesa_aux$Date)
descriptivas(inglesa_aux$Date)
summary(inglesa_aux$Date)
tabla_freq(inglesa_aux$HomeTeam)
descriptivas(inglesa_aux$HomeTeam)
tabla_freq(inglesa_aux
tabla_freq(inglesa_aux)
tabla_freq(inglesa_aux)
tabla_freq(inglesa_aux$FTHG)
tabla_freq(inglesa_aux$FTHG)
tabla_freq(inglesa_aux$HC)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
library(reshape2)
library(dplyr)
library(e1071)
library(Hmisc)
library(inspectdf)
library(funModeling)
library(VIM)
library(stringr)
library(xtable)
library(ggplot2)
library(directlabels)
library(scales)
library(ggthemes)
library(mice)
library(BBmisc)
descriptivas<- function(x){data.frame("MEDIDA"=c("Observaciones", "Mínimo", "1er Q", "Media", "Mediana", "Desv Est", "3er Q", "Máximo", "Asimetría", "Curtosis", "atípico leve<", "atípico leve>","atípico extremo<","atípico extremo>", "Err Est Media", "IC(95%) Media Up", "IC(95%) Media Down"),"VALOR"=format(c(length(na.omit(x)), min(na.omit(x)), quantile(na.omit(x), prob=0.25), mean(na.omit(x)), median(na.omit(x)), sd(na.omit(x)), quantile(na.omit(x), prob=0.75), max(na.omit(x)), skewness(na.omit(x)), kurtosis(na.omit(x)), (2.5*quantile(na.omit(x),prob=0.25)-1.5*quantile(na.omit(x), prob=0.75)),(2.5*quantile(na.omit(x),prob=0.75)-1.5*quantile(na.omit(x), prob=0.25)),(4*quantile(na.omit(x),prob=0.25)-3*quantile(na.omit(x), prob=0.75)),(4*quantile(na.omit(x),prob=0.75)-3*quantile(na.omit(x), prob=0.25)), ((sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))+1.96*(sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))-1.96*((sd(na.omit(x))/sqrt(length(na.omit(x))))))), scientific = F))}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS
descriptivas2<-function(Continua,Categorías){
x1=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){length(na.omit(x))})
names(x1)=c("Categoría","Obs")
x2=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){min(na.omit(x))})
names(x2)=c("Categoría","Mínimo")
x3=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.25)})
names(x3)=c("Categoría","1er Q")
x4=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){median(na.omit(x))})
names(x4)=c("Categoría","Mediana")
x5=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){mean(na.omit(x))})
names(x5)=c("Categoría","Media")
x6=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.75)})
names(x6)=c("Categoría","3er Q")
x7=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){max(na.omit(x))})
names(x7)=c("Categoría","Máximo")
x8=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){sd(na.omit(x))})
names(x8)=c("Categoría","Desv Est")
x9=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){skewness(na.omit(x))})
names(x9)=c("Categoría","Asimetría")
x10=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){kurtosis(na.omit(x))})
names(x10)=c("Categoría","Curtosis")
cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)[,-seq(3,19,2)]
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VARIABLES CONTINUAS EN SUBMUESTRAS
tabla_freq<- function(x,total=1,na="ifany"){
if (total==1) {
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",sum(M$`Freq. Abs.`),sum(M$`Freq. Rel.`))
M$`Freq. Rel.`=as.numeric(M$`Freq. Rel.`)
M$`Freq. Abs.`=as.numeric(M$`Freq. Abs.`)
M
} else{
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M
}
}
#FUNCIÓN PARA ESTADÍSTICAS DESCRIPTIVAS PARA VAR DISCRETAS
tabla_freq2<-function(x,y,na="ifany",prop=0, suma=c("filas","col")){
if (prop==0) {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
M
} else if (prop==1 & suma=="filas") {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 2:ncol(M)) {
M[,i]=M[,i]/M[,ncol(M)]
}
M
} else {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
tabla_freq(inglesa_aux$HC)
